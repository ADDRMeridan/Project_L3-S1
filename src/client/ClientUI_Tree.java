/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import network.ClientNet;
import struct.Message;
import struct.Ticket;

/**
 *
 * @author Mael "ADDRMeridan" Moulin
 */
public class ClientUI_Tree extends javax.swing.JFrame {

	/**
	 * DEFAULT
	 */
	private static final long serialVersionUID = 1L;
	private ClientNet net;
	private String username;
	Set<Ticket> l;
	Ticket opened;

	/**
	 * Creates new form ClientUI_Tree
	 * 
	 * @param net
	 * @param username
	 */
	public ClientUI_Tree(ClientNet net, String username) {
		this.net = net;
		this.username = username;
		this.opened = null;
		try {
			l = net.refreshTree();
		} catch (ClassNotFoundException | IOException ex) {
			Logger.getLogger(ClientUI_Tree.class.getName()).log(Level.SEVERE, null, ex);
		}
		initComponents();
		tree.addListSelectionListener(new ListSelectionListener() {
			@Override
			public void valueChanged(ListSelectionEvent arg0) {
				if (!arg0.getValueIsAdjusting()) {
					titleLabel.setText(tree.getSelectedValue());
					boolean found = false;
					Ticket tmp = null;
					Iterator<Ticket> iter = l.iterator();
					while (!found && iter.hasNext()) {
						tmp = iter.next();
						if (tree.getSelectedValue().equals(tmp.getTitle())) {
							found = true;
						}
					}
					opened = tmp;
					List<Message> messList = new ArrayList<>();
					try {
						messList = net.openTicket(tmp);
					} catch (IOException | ClassNotFoundException ex) {
						Logger.getLogger(ClientUI_Tree.class.getName()).log(Level.SEVERE, null, ex);
					}
					StringBuilder strB = new StringBuilder();
					strB.append("<html>");
					for (Message mess : messList) {
						strB.append("<br>").append(formatDate(mess.gettWritten())).append(": ").append(mess.getMessage())
								.append("<br>");
					}
					strB.append("</html>");
					messText.setText(strB.toString());
				}
			}
		});
	}

	@SuppressWarnings("deprecation")
	private String formatDate(Date d) {

		String tmp = "";
		tmp = "[" + d.getDay() + "/" + d.getDate() + "-" + d.getHours() + ":" + d.getMinutes() + "]";
		return tmp;
	}

	private DefaultListModel<String> getTitles() {

		DefaultListModel<String> tmp = new DefaultListModel<>();
		if (l != null) {
			l.forEach((t) -> {
				tmp.addElement(t.getTitle());
			});
		}
		return tmp;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		newTicketButton = new javax.swing.JButton();
		messPane = new javax.swing.JScrollPane();
		messText = new javax.swing.JLabel();
		titleLabel = new javax.swing.JLabel();
		LogOffButton = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		tree = new javax.swing.JList<>();
		jSeparator1 = new javax.swing.JSeparator();
		answerTicketButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setPreferredSize(new java.awt.Dimension(800, 600));

		newTicketButton.setText("Create new Ticket");
		newTicketButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				newTicketButtonActionPerformed(evt);
			}
		});

		messText.setVerticalAlignment(javax.swing.SwingConstants.TOP);
		messPane.setViewportView(messText);

		titleLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
		titleLabel.setText("Title");

		LogOffButton.setBackground(new java.awt.Color(204, 0, 0));
		LogOffButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
		LogOffButton.setForeground(new java.awt.Color(255, 255, 255));
		LogOffButton.setText("Log Off");
		LogOffButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				LogOffButtonActionPerformed(evt);
			}
		});

		tree.setModel(getTitles());
		tree.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		jScrollPane1.setViewportView(tree);

		answerTicketButton.setText("Answer Ticket");
		answerTicketButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				answerTicketButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(LogOffButton, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jScrollPane1))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(messPane)
						.addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jSeparator1)
						.addGroup(layout.createSequentialGroup()
								.addComponent(newTicketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 204,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(answerTicketButton, javax.swing.GroupLayout.DEFAULT_SIZE, 199,
										Short.MAX_VALUE)))
				.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
								.addGroup(layout.createSequentialGroup()
										.addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(messPane))
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(LogOffButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(newTicketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(answerTicketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void newTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_newTicketButtonActionPerformed
		new ClientUI_NewTicket(net, username).setVisible(true);
		this.setVisible(false);
	}// GEN-LAST:event_newTicketButtonActionPerformed

	private void LogOffButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_LogOffButtonActionPerformed

		try {
			net.disconnect();
			this.setVisible(false);
			System.exit(0);
		} catch (IOException | InterruptedException ex) {
			Logger.getLogger(ClientUI_Tree.class.getName()).log(Level.SEVERE, null, ex);
		}
	}// GEN-LAST:event_LogOffButtonActionPerformed

	private void answerTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_answerTicketButtonActionPerformed
		if (opened != null) {
			new ClientUI_NewMess(net, username, opened).setVisible(true);
			this.setVisible(false);
		}
	}// GEN-LAST:event_answerTicketButtonActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton LogOffButton;
	private javax.swing.JButton answerTicketButton;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JScrollPane messPane;
	private javax.swing.JLabel messText;
	private javax.swing.JButton newTicketButton;
	private javax.swing.JLabel titleLabel;
	private javax.swing.JList<String> tree;
	// End of variables declaration//GEN-END:variables
}
